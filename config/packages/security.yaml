security:
    encoders:
      FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_CANDIDAT:    ROLE_USER
        ROLE_RH:          [ROLE_USER, ROLE_CANDIDAT]
        ROLE_ADMIN:       [ROLE_USER, ROLE_RH, ROLE_CANDIDAT, ROLE_ALLOWED_TO_SWITCH]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
          id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            #anonymous: true
            pattern: ^/
            form_login:
                provider:       fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                login_path:     /login
                use_referer:     true
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
                always_use_default_target_path: false
                default_target_path:            /profile
                success_handler: App\EventListener\AfterLoginRedirection
            logout:       true
            anonymous:    true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
